(syntax
  (definition
    (symbol
      (SYM_REGEX "input"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (symbol
                    (SYM_REGEX "line")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TOKEN_EOF"))
    (DEF "=")
    (expression
      (sequence
        (lookaround
          (flowmarker "!")
          (part
            (element
              (regexp
                (RE_LEADIN "/")
                (RE_CORE ".")
                (RE_LEADOUT "/")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ABORT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'abort'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ACCEPT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'accept'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ACKSEQ"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ackseq'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ADD"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'add'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ADDR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'addr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "AH"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ah'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ALL"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'all'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "AMPERSAND"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'&'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ARP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'arp'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "A_RWND"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'a-rwnd'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ASCONF"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'asconf'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ASCONF_ACK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'asconf-ack'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ASTERISK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'*'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ASTERISK_STRING"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ASTERISK"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (regexp
                  (RE_LEADIN "/")
                  (RE_CORE "[A-Za-z0-9]+")
                  (RE_LEADOUT "/"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ASTERISK"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "AT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'at'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "AUTOMERGE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'automerge'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "AVGPKT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'avgpkt'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "BRIDGE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'bridge'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "BURST"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'burst'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "BYPASS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'bypass'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "BYTES"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'bytes'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CARET"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'~'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CFI"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'cfi'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CGROUP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'cgroup'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CGROUPV2"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'cgroupv2'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CHAIN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'chain'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CHAINS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'chains'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CHECKSUM"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'checksum'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CHUNK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'chunk'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CLASSID"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'classid'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CODE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'code'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "COLON"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "':'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "COMMA"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'\,'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "COMMENT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'comment'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "COMP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'comp'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CONSTANT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'constant'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CONTINUE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'continue'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "COOKIE_ACK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'cookie-ack'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "COOKIE_ECHO"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'cookie-echo'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "COUNT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'count'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "COUNTER"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'counter'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "COUNTERS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'counters'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CPI"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'cpi'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CPU"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'cpu'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CREATE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'create'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CSUMCOV"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'csumcov'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ct'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CUM_TSN_ACK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'cum-tsn-ack'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "CWR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'cwr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DADDR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'daddr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DASH"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'\-'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DATA"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'data'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DAY"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'day'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DCCP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'dccp'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "_DEFINE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'define'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DEI"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'dei'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DELETE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'delete'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DESCRIBE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'describe'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DEVICE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'device'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DEVICES"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'devices'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DIRECTION"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'direction'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DNAT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'dnat'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DOFF"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'doff'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DOT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'\.'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DPORT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'dport'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DROP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'drop'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DSCP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'dscp'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DST"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'dst'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DUP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'dup'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "DYNAMIC"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'dynamic'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ECHO"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'echo'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ECNE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ecne'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ECN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ecn'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ELEMENT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'element'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ELEMENTS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'elements'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "EOL"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (regexp
                  (RE_LEADIN "/")
                  (RE_CORE "$")
                  (RE_LEADOUT "/"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "EQ"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'='")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ERROR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'error'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ESP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'esp'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ETHER"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ether'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "EVENT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'event'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "EXISTS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'exists'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "EXPECTATION"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'expectation'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "EXPIRATION"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'expiration'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "EXPIRES"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'expires'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "EXPORT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'export'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "EXTHDR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'exthdr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FANOUT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'fanout'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FASTOPEN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'fastopen'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FIB"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'fib'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FLAGS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'flags'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FLOW"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'flow'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FLOWLABEL"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'flowlabel'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FLOWTABLE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'flowtable'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FLOWTABLES"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'flowtables'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FLUSH"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'flush'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FORWARD_TSN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'forward-tsn'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FRAG"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'frag'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FRAG_OFF"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'frag-off'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FULLY_RANDOM"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'fully-random'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "FWD"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'fwd'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "GATEWAY"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'gateway'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "GC_INTERVAL"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'gc-interval'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "GET"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'get'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "GOTO"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'goto'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "GROUP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'group'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "GT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'>'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "GTE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'>='")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HANDLE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'handle'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HBH"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'hbh'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HDRLENGTH"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'hdrlength'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HDRVERSION"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'hdrversion'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HEARTBEAT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'heartbeat'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HEARTBEAT_ACK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'heartbeat-ack'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HELPER"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'helper'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HELPERS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'helpers'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HLEN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'hlen'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HOOK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'hook'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HOOKS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'hooks'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HOPLIMIT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'hoplimit'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HOUR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'hour'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "HTYPE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'htype'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "IBRIDGENAME"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ibridgename'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "IBRIPORT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ibriport'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ICMP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'icmp'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ICMP6"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'icmp6'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ICMPX"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'icmpx'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ID"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'id'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "IGMP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'igmp'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "IIF"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'iif'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "IIFGROUP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'iifgroup'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "IIFNAME"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'iifname'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "IIFTYPE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'iiftype'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "IMPORT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'import'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "IN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'in'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "INC"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'inc'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "_INCLUDE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'include'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "INDEX"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'index'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "INET"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'inet'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "INIT_ACK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'init-ack'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "INIT_TAG"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'init-tag'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "INIT_TSN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'init-tsn'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "INIT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'init'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "INSERT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'insert'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "INTERVAL"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'interval'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "IP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ip'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "IP6"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ip6'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "IPSEC"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ipsec'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "JHASH"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'jhash'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "JSON"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'json'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "JUMP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'jump'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "L3PROTOCOL"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'l3protocol'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LABEL"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'label'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LAST_ENT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'last-ent'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LEFT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'left'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LENGTH"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'length'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LEVEL"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'level'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LIMIT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'limit'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LIMITS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'limits'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LIST"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'list'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LL_HDR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ll-hdr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LOG"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'log'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LOWEST_TSN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'lowest-tsn'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LSHIFT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'lshift'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LSRR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'lsrr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'<'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "LTE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'<='")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MAP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'map'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MAPS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'maps'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MARK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'mark'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MASQUERADE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'masquerade'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MAXDELAY"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'maxdelay'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MD5SIG"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'md5sig'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MEMORY"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'memory'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "META"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'meta'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "METER"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'meter'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "METERS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'meters'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MH"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'mh'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MINUTE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'minute'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MISSING"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'missing'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MOD"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'mod'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MONITOR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'monitor'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MORE_FRAGMENTS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'more-fragments'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MPTCP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'mptcp'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MRT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'mrt'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MSS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'mss'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "MTU"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'mtu'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NAME"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'name'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NEQ"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'<>'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NETDEV"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'netdev'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NETWORK_HDR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'network-hdr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NEW_CUM_TSN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'new-cum-tsn'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NEXTHDR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'nexthdr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NEXTHOP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'nexthop'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NFTRACE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'nftrace'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NOP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'nop'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NOT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'!'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NOTRACK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'notrack'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NUM"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (regexp
                  (RE_LEADIN "/")
                  (RE_CORE "[0-9]{1,7}")
                  (RE_LEADOUT "/"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NUM_DUP_TSNS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'num-dup-tsns'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NUM_GACK_BLOCKS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'num-gack-blocks'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NUMGEN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'numgen'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NUM_ISTREAMS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'num-istreams'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "NUM_OSTREAMS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'num-ostreams'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OBRIDGENAME"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'obridgename'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OBRIPORT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'obriport'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OFFLOAD"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'offload'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OFFSET"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'offset'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OIF"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'oif'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OIFGROUP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'oifgroup'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OIFNAME"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'oifname'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OIFTYPE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'oiftype'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OPERATION"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'operation'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OPTION"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'option'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OPTIONS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'options'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ORIGINAL"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'original'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OSF"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'osf'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OUT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'out'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "OVER"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'over'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PACKETS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'packets'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PCP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'pcp'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PERFORMANCE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'performance'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PERSISTENT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'persistent'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PKTTYPE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'pkttype'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PLEN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'plen'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PLUS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'plus'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "POLICY"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'policy'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PORT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'port'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "POSITION"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'position'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PPID"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ppid'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PPTR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'pptr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PREFIX"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'prefix'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PRIORITY"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'priority'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PROTOCOL"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'protocol'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PROTO_DST"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'proto-dst'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PROTO_SRC"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'proto-src'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PTR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ptr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "PTYPE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ptype'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "QUEUE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'queue'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "QUEUENUM"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'queuenum'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "QUEUE_THRESHOLD"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'queue-threshold'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "QUOTA"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'quota'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "QUOTAS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'quotas'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "QUOTED_STRING"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (regexp
                  (RE_LEADIN "/")
                  (RE_CORE '"[\w\s]{1,255}"')
                  (RE_LEADOUT "/"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RA"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ra'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RANDOM"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'random'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RATE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'rate'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "REDEFINE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'redefine'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "REDIRECT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'redirect'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "_REJECT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'reject'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RENAME"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'rename'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "REPLACE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'replace'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "REPLY"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'reply'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "REQID"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'reqid'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RESERVED"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'reserved'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RESERVED2"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'reserved2'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RESET"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'reset'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RETURN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'return'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RIGHT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'right'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'rr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RSHIFT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'rshift'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'rt'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RT0"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'rt0'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RT2"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'rt2'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RT4"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'rt4'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RTCLASSID"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'rtclassid'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RULE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'rule'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RULES"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'rules'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "RULESET"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ruleset'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SACK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'sack'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SACK0"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'sack0'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SACK1"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'sack1'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SACK2"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'sack2'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SACK3"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'sack3'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SACK_PERM"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'sack-perm'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SADDR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'saddr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SCTP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'sctp'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SECMARK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'secmark'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SECMARKS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'secmarks'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SECOND"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'second'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SEED"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'seed'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SEG_LEFT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'seg-left'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SEQNO"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'seqno'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SEQUENCE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'sequence'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SET"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'set'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SETS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'sets'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SHUTDOWN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'shutdown'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SHUTDOWN_ACK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'shutdown-ack'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SHUTDOWN_COMPLETE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'shutdown-complete'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SID"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'sid'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SIZE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'size'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SKGID"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'skgid'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SKUID"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'skuid'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SLASH"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'\/'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SNAPLEN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'snaplen'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SNAT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'snat'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SOCKET"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'socket'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SPI"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'spi'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SPNUM"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'spnum'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SPORT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'sport'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SSN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ssn'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SSRR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ssrr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "STATE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'state'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "STATUS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'status'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "STREAM"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'stream'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "STRING"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'string'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SUBTYPE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'subtype'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SYMHASH"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'symhash'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SYNPROXY"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'synproxy'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SYNPROXYS"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'synproxys'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TABLE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'table'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TABLES"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'tables'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TAG"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'tag'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TCP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'tcp'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TIME"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'time'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TIMEOUT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'timeout'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TIMESTAMP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'timestamp'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TO"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'to'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TPROXY"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'tproxy'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TRACE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'trace'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TRANSPARENT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'transparent'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TRANSPORT_HDR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'transport-hdr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TSECR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'tsecr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TSN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'tsn'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TSVAL"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'tsval'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TTL"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'ttl'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TYPE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'type'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "TYPEOF"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'typeof'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "UDP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'udp'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "UDPLITE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'udplite'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "UNDEFINE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'undefine'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "UNTIL"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'until'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "UPDATE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'update'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "URGPTR"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'urgptr'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "USED"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'used'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "VALUE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'value'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "VLAN"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'vlan'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "VM"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'vm'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "VMAP"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'vmap'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "VTAG"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'vtag'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "WEEK"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'week'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "WILDCARD"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'wildcard'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "WINDOW"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'window'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "WITH"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'with'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "WSCALE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'wscale'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "XML"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'xml'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "XT"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'xt'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ZONE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'zone'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "_NEWLINE"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (regexp
                  (RE_LEADIN "/")
                  (RE_CORE "\m")
                  (RE_LEADOUT "/"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "SEMICOLON"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "';'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "stmt_separator"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "_NEWLINE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SEMICOLON"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "opt_newline"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "_NEWLINE")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_ah"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_arp"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_at"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_comp"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_ct"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_counter"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_dccp"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_dst"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_dup"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_esp"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_eth"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_export"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_fib"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_frag"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_fwd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_hash"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_hbh"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_ip"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_ip6"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_vlan"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_icmp"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_igmp"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_import"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_ipsec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_list"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_limit"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_meta"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_mh"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_monitor"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_nat"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_numgen"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_osf"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_policy"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_quota"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_queue"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_reject"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_reset"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_rt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_sctp"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_sctp_chunk"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_secmark"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_socket"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_tcp"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_tproxy"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_type"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_th"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_udp"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_udplite"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_log"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_synproxy"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "close_scope_xt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "common_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "_INCLUDE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "QUOTED_STRING")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "_DEFINE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "identifier"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'='")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "initializer_expr")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "REDEFINE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "identifier"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'='")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "initializer_expr")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "UNDEFINE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "identifier"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_separator"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "line"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "common_block")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_separator")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "base_cmd"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_separator")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "base_cmd"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TOKEN_EOF"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "base_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ADD"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "add_cmd")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "REPLACE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "replace_cmd")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CREATE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "create_cmd")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "INSERT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "insert_cmd")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DELETE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "delete_cmd")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "GET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "get_cmd")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LIST"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "list_cmd"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_list")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RESET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "reset_cmd"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_reset")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLUSH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "flush_cmd")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RENAME"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rename_cmd")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IMPORT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "import_cmd"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_import")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "EXPORT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "export_cmd"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_export")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MONITOR"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "monitor_cmd"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_monitor")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DESCRIBE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "describe_cmd")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "add_cmd"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "add_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TABLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "table_block_alloc"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'{'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "table_block"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'}'")))))))
                    (:Text ")")))
                (:Text "?"))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHAIN"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "chain_block_alloc"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'{'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "chain_block"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'}'")))))))
                    (:Text ")")))
                (:Text "?"))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "RULE")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rule_position"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rule")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "SET"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "set_spec"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "set_block_alloc"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "set_block")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "MAP"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "set_spec"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "map_block_alloc"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "map_block")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "FLOWTABLE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "flowtable_spec"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "flowtable_block_alloc"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "flowtable_block"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'"))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ELEMENT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_block_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COUNTER"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "counter_obj"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "counter_config")))))))
                                    (OR "|")
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (literal "'{'")))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "counter_block"))))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (literal "'}'")))))))
                                  (:Text ")"))))))))
                    (:Text ")")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_counter")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUOTA"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "quota_obj"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "quota_config")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "quota_block"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'}'")))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_quota")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "HELPER"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "obj_spec"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_obj_alloc"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_helper_block")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TIMEOUT"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "obj_spec"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_obj_alloc"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_timeout_block")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "EXPECTATION"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "obj_spec"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_obj_alloc"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_expect_block"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ct")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LIMIT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "limit_obj"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "limit_config")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "limit_block"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'}'")))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_limit")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SECMARK"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "secmark_obj"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "secmark_config")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "secmark_block"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'}'")))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_secmark")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SYNPROXY"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "synproxy_obj"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "synproxy_config")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "synproxy_block"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'}'")))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_synproxy"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "replace_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RULE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ruleid_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rule"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "create_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TABLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "table_block_alloc"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'{'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "table_block"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'}'")))))))
                    (:Text ")")))
                (:Text "?"))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHAIN"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "chain_block_alloc"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'{'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "chain_block"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'}'")))))))
                    (:Text ")")))
                (:Text "?"))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "SET"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "set_spec"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "set_block_alloc"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "set_block")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "MAP"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "set_spec"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "map_block_alloc"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "map_block")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "FLOWTABLE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "flowtable_spec"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "flowtable_block_alloc"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "flowtable_block"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'"))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ELEMENT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_block_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COUNTER"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "counter_obj"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "counter_config"))))))))
                    (:Text ")")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_counter")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUOTA"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "quota_obj"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "quota_config"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_quota")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "HELPER"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "obj_spec"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_obj_alloc"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_helper_block")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TIMEOUT"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "obj_spec"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_obj_alloc"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_timeout_block")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "EXPECTATION"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "obj_spec"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_obj_alloc"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (literal "'{'")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_expect_block"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ct")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LIMIT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "limit_obj"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "limit_config"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_limit")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SECMARK"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "secmark_obj"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "secmark_config"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_secmark")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SYNPROXY"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "synproxy_obj"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "synproxy_config"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_synproxy"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "insert_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RULE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rule_position"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rule"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "table_or_id_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "tableid_spec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "chain_or_id_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chainid_spec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_or_id_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "setid_spec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "obj_or_id_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "objid_spec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "delete_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TABLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_or_id_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHAIN"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_or_id_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RULE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ruleid_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_or_id_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MAP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ELEMENT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_block_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLOWTABLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "flowtable_spec"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (option
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "flowtable_block_alloc"))))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (literal "'{'")))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "flowtable_block"))))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (literal "'}'")))))))
                                  (:Text ")")))
                              (:Text "?"))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "flowtableid_spec"))))))))
                  (:Text ")")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COUNTER"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_or_id_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_counter")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUOTA"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_or_id_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_quota")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ct_obj_type"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ct_obj_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ct")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LIMIT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_or_id_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_limit")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SECMARK"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_or_id_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_secmark")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SYNPROXY"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_or_id_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_synproxy"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "get_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ELEMENT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_block_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "list_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TABLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TABLES"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ruleset_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHAINS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ruleset_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RULESET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ruleset_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "METERS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ruleset_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLOWTABLES"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ruleset_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MAPS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ruleset_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHAIN"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SETS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TABLE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "table_spec")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ruleset_spec"))))))))
                  (:Text ")")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COUNTERS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TABLE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "table_spec")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ruleset_spec"))))))))
                  (:Text ")")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUOTAS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TABLE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "table_spec")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ruleset_spec"))))))))
                  (:Text ")")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LIMITS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TABLE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "table_spec")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ruleset_spec"))))))))
                  (:Text ")")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SECMARKS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TABLE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "table_spec")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ruleset_spec"))))))))
                  (:Text ")")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SYNPROXYS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TABLE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "table_spec")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ruleset_spec"))))))))
                  (:Text ")")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "METER"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MAP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COUNTER"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_counter")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUOTA"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_quota")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LIMIT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_limit")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SECMARK"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_secmark")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SYNPROXY"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_synproxy")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLOW"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TABLES"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ruleset_spec")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TABLE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "set_spec"))))))))
                  (:Text ")")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLOWTABLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "flowtable_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_obj_type"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "obj_spec")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_cmd_type"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TABLE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "table_spec"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ct")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HOOKS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "basehook_spec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "basehook_device_name"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DEVICE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "basehook_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ruleset_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "basehook_device_name")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "reset_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COUNTERS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TABLE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "table_spec")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ruleset_spec"))))))))
                  (:Text ")")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUOTAS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TABLE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "table_spec")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ruleset_spec"))))))))
                  (:Text ")")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COUNTER"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_counter")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUOTA"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "obj_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_quota"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "flush_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TABLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHAIN"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "SET")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "MAP")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "FLOW"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TABLE")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "METER"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RULESET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ruleset_spec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rename_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHAIN"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "import_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "RULESET")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "markup_format"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "export_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "RULESET")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "markup_format"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "monitor_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "monitor_event"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "monitor_object"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "monitor_format"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "monitor_event"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "STRING")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "monitor_object"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "TABLES")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "CHAINS")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "SETS")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "ELEMENTS")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "RULESET")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "TRACE")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "RULES"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "monitor_format"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "markup_format")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "markup_format"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "XML")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "VM")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "JSON"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "describe_cmd"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "primary_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "table_block_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "table_options"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLAGS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "comment_spec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "table_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "common_block")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (option
                                (element
                                  (group
                                    (:Text "(")
                                    (expression
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "table_options")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (group
                                                  (:Text "(")
                                                  (expression
                                                    (sequence
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "CHAIN"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "chain_identifier"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "chain_block_alloc"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (literal "'{'")))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "chain_block")))))))
                                                    (OR "|")
                                                    (sequence
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "SET"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "set_identifier"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "set_block_alloc"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (literal "'{'")))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "set_block")))))))
                                                    (OR "|")
                                                    (sequence
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "MAP"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "set_identifier"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "map_block_alloc"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (literal "'{'")))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "map_block")))))))
                                                    (OR "|")
                                                    (sequence
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "FLOWTABLE"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "flowtable_identifier"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "flowtable_block_alloc"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (literal "'{'")))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "flowtable_block"))))))))
                                                  (:Text ")"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (literal "'}'"))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "CT"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (group
                                                  (:Text "(")
                                                  (expression
                                                    (sequence
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "HELPER"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "obj_identifier"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "obj_block_alloc"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (literal "'{'")))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "ct_helper_block")))))))
                                                    (OR "|")
                                                    (sequence
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "TIMEOUT"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "obj_identifier"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "obj_block_alloc"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (literal "'{'")))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "ct_timeout_block")))))))
                                                    (OR "|")
                                                    (sequence
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "EXPECTATION"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "obj_identifier"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "obj_block_alloc"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (literal "'{'")))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "ct_expect_block"))))))))
                                                  (:Text ")"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (literal "'}'")))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "close_scope_ct"))))))))
                                    (:Text ")")))
                                (:Text "?")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COUNTER"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "obj_identifier"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "obj_block_alloc"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'{'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "counter_block"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'}'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "close_scope_counter")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "QUOTA"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "obj_identifier"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "obj_block_alloc"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'{'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "quota_block"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'}'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "close_scope_quota")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "LIMIT"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "obj_identifier"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "obj_block_alloc"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'{'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "limit_block"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'}'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "close_scope_limit")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "SECMARK"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "obj_identifier"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "obj_block_alloc"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'{'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "secmark_block"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'}'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "close_scope_secmark")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "SYNPROXY"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "obj_identifier"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "obj_block_alloc"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'{'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "synproxy_block"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'}'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "close_scope_synproxy"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "chain_block_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "chain_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "common_block")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (option
                                (element
                                  (group
                                    (:Text "(")
                                    (expression
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "hook_spec")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "policy_spec")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "flags_spec")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "rule")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "comment_spec"))))))))
                                    (:Text ")")))
                                (:Text "?")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "typeof_data_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "typeof_expr"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "DOT"))))))))
                    (:Text ")")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "primary_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "typeof_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "primary_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "DOT"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "primary_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_block_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_block"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "common_block")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (option
                                (element
                                  (group
                                    (:Text "(")
                                    (expression
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "TYPEOF"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "typeof_expr")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "FLAGS"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "set_flag_list")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (group
                                                  (:Text "(")
                                                  (expression
                                                    (sequence
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "TIMEOUT")))))))
                                                    (OR "|")
                                                    (sequence
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "GC_INTERVAL"))))))))
                                                  (:Text ")"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "time_spec")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "stateful_stmt_list")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "set_mechanism")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "comment_spec"))))))))
                                    (:Text ")")))
                                (:Text "?")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "TYPE"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "data_type_expr"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "close_scope_type")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "ELEMENTS"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'='")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "set_block_expr")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "AUTOMERGE"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_block_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "variable_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_flag_list"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_flag"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COMMA"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "set_flag"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_flag"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CONSTANT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "INTERVAL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TIMEOUT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DYNAMIC"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "map_block_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "map_block_obj_type"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COUNTER"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_counter")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUOTA"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_quota")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LIMIT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_limit")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SECMARK"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_secmark")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SYNPROXY"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_synproxy"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "map_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "common_block")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (option
                                (element
                                  (group
                                    (:Text "(")
                                    (expression
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "TIMEOUT"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "time_spec")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "FLAGS"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "set_flag_list")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "stateful_stmt_list")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "comment_spec")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "set_mechanism")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "TYPEOF"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "typeof_expr"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "COLON"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (group
                                                  (:Text "(")
                                                  (expression
                                                    (sequence
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "typeof_data_expr")))))))
                                                    (OR "|")
                                                    (sequence
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "INTERVAL"))))))
                                                      (AND)
                                                      (interleave
                                                        (difference
                                                          (term
                                                            (element
                                                              (symbol
                                                                (SYM_REGEX "typeof_expr"))))))))
                                                  (:Text ")"))))))))
                                    (:Text ")")))
                                (:Text "?")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "TYPE"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "data_type_expr"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COLON"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (option
                                              (element
                                                (symbol
                                                  (SYM_REGEX "INTERVAL")))
                                              (:Text "?")))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "data_type_expr")))))))
                                    (OR "|")
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "map_block_obj_type"))))))))
                                  (:Text ")"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "close_scope_type")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "ELEMENTS"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'='")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "set_block_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_mechanism"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "POLICY"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_policy_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_policy")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SIZE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_policy_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PERFORMANCE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MEMORY"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "flowtable_block_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "flowtable_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "common_block")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (option
                                (element
                                  (group
                                    (:Text "(")
                                    (expression
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "HOOK"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "STRING"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "prio_spec")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "DEVICES"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (literal "'='")))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "flowtable_expr")))))))
                                      (OR "|")
                                      (sequence
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "FLAGS"))))))
                                        (AND)
                                        (interleave
                                          (difference
                                            (term
                                              (element
                                                (symbol
                                                  (SYM_REGEX "OFFLOAD"))))))))
                                    (:Text ")")))
                                (:Text "?")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COUNTER"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "close_scope_counter"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "flowtable_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'{'")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "flowtable_expr_member"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COMMA"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "flowtable_expr_member")))))))
                                    (OR "|")
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "opt_newline"))))))))
                                  (:Text ")"))))))))
                    (:Text ")")))
                (:Text "*")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'"))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "variable_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "flowtable_expr_member"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUOTED_STRING")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "variable_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "data_type_atom_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "type_identifier")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TIME"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "data_type_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "data_type_atom_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "DOT"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "data_type_atom_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "obj_block_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "counter_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "common_block")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "counter_config")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "comment_spec"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "quota_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "common_block")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "quota_config")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "comment_spec"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_helper_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "common_block")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "ct_helper_config")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "comment_spec"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_timeout_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "common_block")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "ct_timeout_config")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "comment_spec"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_expect_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "common_block")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "ct_expect_config")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "comment_spec"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "limit_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "common_block")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "limit_config")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "comment_spec"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "secmark_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "common_block")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "secmark_config")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "comment_spec"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "synproxy_block"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "common_block")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "synproxy_config")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "comment_spec"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "type_identifier"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MARK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DSCP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ECN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CLASSID"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "hook_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TYPE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_type"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HOOK"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "dev_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "prio_spec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "prio_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PRIORITY"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "extended_prio_spec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "extended_prio_name"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OUT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "extended_prio_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "int_num")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "variable_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "extended_prio_name"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "PLUS")))))))
                                    (OR "|")
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "DASH"))))))))
                                  (:Text ")"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "NUM"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "int_num"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "DASH")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "dev_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "DEVICE"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "string")))))))
                                    (OR "|")
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "variable_expr"))))))))
                                  (:Text ")")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "DEVICES"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'='")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "flowtable_expr"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "flags_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLAGS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OFFLOAD"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "policy_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "POLICY"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "policy_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_policy"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "policy_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "variable_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_policy"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "chain_policy"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ACCEPT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DROP"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "identifier"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "string"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUOTED_STRING")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ASTERISK_STRING"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "time_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "family_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "family_spec_explicit")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "family_spec_explicit"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ip")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IP6"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ip6")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "INET")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ARP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_arp")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "BRIDGE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NETDEV"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "table_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "family_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "tableid_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "family_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HANDLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "chain_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "chainid_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HANDLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "chain_identifier"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "setid_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HANDLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_identifier"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "flowtable_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "flowtableid_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HANDLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "flowtable_identifier"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "obj_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "objid_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "table_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HANDLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "obj_identifier"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "handle_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HANDLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "position_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "POSITION"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "index_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "INDEX"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rule_position"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "position_spec")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "handle_spec")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "index_spec"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ruleid_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "handle_spec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "comment_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COMMENT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "string"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ruleset_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "family_spec_explicit")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rule"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rule_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "comment_spec")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rule_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (oneormore
                (element
                  (symbol
                    (SYM_REGEX "stmt")))
                (:Text "+")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "stateful_stmt_list"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (oneormore
                (element
                  (symbol
                    (SYM_REGEX "stateful_stmt")))
                (:Text "+")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "stateful_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "counter_stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_counter")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "limit_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "quota_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "connlimit_stmt"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "verdict_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "match_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "meter_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "payload_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stateful_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "meta_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "log_stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_log")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "reject_stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_reject")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "nat_stmt")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "masq_stmt")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "redir_stmt"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_nat")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "tproxy_stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_tproxy")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "queue_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ct_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "dup_stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_dup")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "fwd_stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_fwd")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "map_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "synproxy_stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_synproxy")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "optstrip_stmt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "xt_stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_xt"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "xt_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "XT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "chain_stmt_type"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "JUMP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "GOTO"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "chain_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_stmt_type"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_block_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'{'")))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (option
                                (element
                                  (symbol
                                    (SYM_REGEX "rule")))
                                (:Text "?")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_separator"))))))))
                    (:Text ")")))
                (:Text "*")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "verdict_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "verdict_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "verdict_map_stmt"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "verdict_map_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "concat_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "VMAP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "verdict_map_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "verdict_map_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'{'")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "verdict_map_list_member_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COMMA"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "verdict_map_list_member_expr")))))))
                                    (OR "|")
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "opt_newline"))))))))
                                  (:Text ")"))))))))
                    (:Text ")")))
                (:Text "*")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'"))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_ref_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "verdict_map_list_member_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "opt_newline"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_elem_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COLON"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "verdict_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "opt_newline"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "connlimit_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COUNT"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "OVER")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ct"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "counter_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "counter_stmt_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (symbol
                    (SYM_REGEX "counter_arg")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "counter_stmt_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COUNTER"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "NAME"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_expr"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "counter_arg"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "PACKETS")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "BYTES"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "log_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "log_stmt_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (symbol
                    (SYM_REGEX "log_arg")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "log_stmt_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LOG"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "log_arg"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PREFIX"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "string")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "GROUP")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "SNAPLEN")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "QUEUE_THRESHOLD"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LEVEL"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "level_type")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLAGS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "log_flags"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "level_type"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "string"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "log_flags"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TCP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "log_flag_tcp"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COMMA"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "log_flag_tcp"))))))))
                    (:Text ")")))
                (:Text "*")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_tcp")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OPTIONS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ip")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SKUID")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ETHER"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_eth")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ALL"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "log_flag_tcp"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SEQUENCE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OPTIONS"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "limit_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LIMIT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "RATE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "limit_mode"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (group
                                (:Text "(")
                                (expression
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "limit_rate_pkts"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "limit_burst_pkts")))))))
                                  (OR "|")
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "limit_rate_bytes"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "limit_burst_bytes"))))))))
                                (:Text ")")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "NAME"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "stmt_expr"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_limit"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "quota_mode"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "OVER")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "UNTIL"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "quota_unit"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "BYTES")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "quota_used"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "USED"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "NUM"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "quota_unit"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "quota_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUOTA"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "quota_mode"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "NUM"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "quota_unit"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "quota_used")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "NAME"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "stmt_expr"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_quota"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "limit_mode"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "OVER")))))))
                      (OR "|")
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "UNTIL"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "limit_burst_pkts"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "BURST"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "NUM"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "PACKETS"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "limit_rate_pkts"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SLASH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "time_unit"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "limit_burst_bytes"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "BURST"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "limit_bytes"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "limit_rate_bytes"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "limit_bytes"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SLASH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "time_unit"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "limit_bytes"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "BYTES")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "STRING"))))))))
                  (:Text ")"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "time_unit"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SECOND")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MINUTE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HOUR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DAY")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "WEEK"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "reject_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "reject_stmt_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "reject_opts"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "reject_stmt_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "_REJECT"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "reject_with_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "integer_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "reject_opts"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "WITH"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (group
                                                (:Text "(")
                                                (expression
                                                  (sequence
                                                    (interleave
                                                      (difference
                                                        (term
                                                          (element
                                                            (symbol
                                                              (SYM_REGEX "ICMP6")))))))
                                                  (OR "|")
                                                  (sequence
                                                    (interleave
                                                      (difference
                                                        (term
                                                          (element
                                                            (symbol
                                                              (SYM_REGEX "ICMP"))))))))
                                                (:Text ")"))))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (group
                                                (:Text "(")
                                                (expression
                                                  (sequence
                                                    (interleave
                                                      (difference
                                                        (term
                                                          (element
                                                            (symbol
                                                              (SYM_REGEX "TYPE"))))))
                                                    (AND)
                                                    (interleave
                                                      (difference
                                                        (term
                                                          (element
                                                            (symbol
                                                              (SYM_REGEX "reject_with_expr"))))))
                                                    (AND)
                                                    (interleave
                                                      (difference
                                                        (term
                                                          (element
                                                            (symbol
                                                              (SYM_REGEX "close_scope_type"))))))
                                                    (AND)
                                                    (interleave
                                                      (difference
                                                        (term
                                                          (element
                                                            (symbol
                                                              (SYM_REGEX "close_scope_icmp")))))))
                                                  (OR "|")
                                                  (sequence
                                                    (interleave
                                                      (difference
                                                        (term
                                                          (element
                                                            (symbol
                                                              (SYM_REGEX "reject_with_expr"))))))))
                                                (:Text ")")))))))
                                    (OR "|")
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "ICMPX"))))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (group
                                                (:Text "(")
                                                (expression
                                                  (sequence
                                                    (interleave
                                                      (difference
                                                        (term
                                                          (element
                                                            (symbol
                                                              (SYM_REGEX "TYPE"))))))
                                                    (AND)
                                                    (interleave
                                                      (difference
                                                        (term
                                                          (element
                                                            (symbol
                                                              (SYM_REGEX "reject_with_expr"))))))
                                                    (AND)
                                                    (interleave
                                                      (difference
                                                        (term
                                                          (element
                                                            (symbol
                                                              (SYM_REGEX "close_scope_type")))))))
                                                  (OR "|")
                                                  (sequence
                                                    (interleave
                                                      (difference
                                                        (term
                                                          (element
                                                            (symbol
                                                              (SYM_REGEX "reject_with_expr"))))))))
                                                (:Text ")")))))))
                                    (OR "|")
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "TCP"))))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "close_scope_tcp"))))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "RESET"))))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "close_scope_reset"))))))))
                                  (:Text ")"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "nat_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "nat_stmt_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TO"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (option
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (option
                                              (element
                                                (symbol
                                                  (SYM_REGEX "stmt_expr")))
                                              (:Text "?")))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "COLON"))))))))
                                  (:Text ")")))
                              (:Text "?"))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "INTERVAL"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TO")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "PREFIX"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TO")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "nf_key_proto"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (group
                                (:Text "(")
                                (expression
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "TO"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "stmt_expr"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "COLON")))))))
                                  (OR "|")
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "ADDR"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "DOT"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "PORT"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "TO")))))))
                                  (OR "|")
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "INTERVAL"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "TO")))))))
                                  (OR "|")
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "PREFIX"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "TO")))))))
                                  (OR "|")
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "TO"))))))))
                                (:Text ")")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (option
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (option
                                              (element
                                                (symbol
                                                  (SYM_REGEX "stmt_expr")))
                                              (:Text "?")))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "COLON"))))))))
                                  (:Text ")")))
                              (:Text "?")))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (symbol
                    (SYM_REGEX "nf_nat_flags")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "nat_stmt_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SNAT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DNAT"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "tproxy_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TPROXY"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "nf_key_proto")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TO"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (option
                                (element
                                  (symbol
                                    (SYM_REGEX "stmt_expr")))
                                (:Text "?")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COLON"))))))))
                    (:Text ")")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "synproxy_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "synproxy_stmt_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (symbol
                    (SYM_REGEX "synproxy_arg")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "synproxy_stmt_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SYNPROXY"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "NAME"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_expr"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "synproxy_arg"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "MSS")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "WSCALE"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TIMESTAMP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SACK_PERM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "synproxy_config"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MSS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "WSCALE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "NUM")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "stmt_separator"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "WSCALE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "NUM"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "stmt_separator"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "synproxy_ts"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "synproxy_sack"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "synproxy_obj"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "synproxy_ts"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "TIMESTAMP")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "synproxy_sack"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "SACK_PERM")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "primary_stmt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "symbol_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "integer_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "boolean_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "meta_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rt_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ct_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "numgen_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "hash_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "payload_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "keyword_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "socket_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "osf_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'('")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "basic_stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "')'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "shift_stmt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "primary_stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "LSHIFT")))))))
                                    (OR "|")
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "RSHIFT"))))))))
                                  (:Text ")"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "primary_stmt_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "and_stmt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "shift_stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "AMPERSAND"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "shift_stmt_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "exclusive_or_stmt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "and_stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "CARET"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "and_stmt_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "basic_stmt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "exclusive_or_stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'|'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "exclusive_or_stmt_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "concat_stmt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "basic_stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "DOT"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "primary_stmt_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "map_stmt_expr_set"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_ref_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "map_stmt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "concat_stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "MAP"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "map_stmt_expr_set"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "prefix_stmt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "basic_stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SLASH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "range_stmt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "basic_stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DASH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "basic_stmt_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "multiton_stmt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "prefix_stmt_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "range_stmt_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "stmt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "map_stmt_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "multiton_stmt_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "symbol_stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (oneormore
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COMMA"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "symbol_stmt_expr"))))))))
                    (:Text ")")))
                (:Text "+")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "masq_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "masq_stmt_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "masq_stmt_args")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "masq_stmt_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MASQUERADE"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "masq_stmt_args"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TO"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COLON"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "nf_nat_flags")))
                (:Text "?"))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "nf_nat_flags"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "redir_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "redir_stmt_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "redir_stmt_arg")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "redir_stmt_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "REDIRECT"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "redir_stmt_arg"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TO"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "COLON")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "nf_nat_flags")))
                (:Text "?"))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "nf_nat_flags"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "dup_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DUP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TO"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "DEVICE"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "stmt_expr"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "fwd_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FWD"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TO")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "nf_key_proto"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TO"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "stmt_expr"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "DEVICE"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "nf_nat_flags"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "nf_nat_flag"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COMMA"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "nf_nat_flag"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "nf_nat_flag"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RANDOM")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FULLY_RANDOM")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PERSISTENT"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "queue_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "queue_stmt_compat")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "QUEUE"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (group
                                (:Text "(")
                                (expression
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "TO"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "queue_stmt_expr")))))))
                                  (OR "|")
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "FLAGS"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "queue_stmt_flags"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (group
                                              (:Text "(")
                                              (expression
                                                (sequence
                                                  (interleave
                                                    (difference
                                                      (term
                                                        (element
                                                          (symbol
                                                            (SYM_REGEX "TO"))))))
                                                  (AND)
                                                  (interleave
                                                    (difference
                                                      (term
                                                        (element
                                                          (symbol
                                                            (SYM_REGEX "queue_stmt_expr")))))))
                                                (OR "|")
                                                (sequence
                                                  (interleave
                                                    (difference
                                                      (term
                                                        (element
                                                          (symbol
                                                            (SYM_REGEX "QUEUENUM"))))))
                                                  (AND)
                                                  (interleave
                                                    (difference
                                                      (term
                                                        (element
                                                          (symbol
                                                            (SYM_REGEX "queue_stmt_expr_simple"))))))))
                                              (:Text ")"))))))))
                                (:Text ")"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_queue"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "queue_stmt_compat"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "queue_stmt_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (symbol
                    (SYM_REGEX "queue_stmt_arg")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "queue_stmt_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUEUE"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "queue_stmt_arg"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUEUENUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "queue_stmt_expr_simple")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "queue_stmt_flags"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "queue_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "variable_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "integer_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "queue_stmt_expr_simple"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "integer_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "variable_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "queue_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DASH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "queue_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "queue_stmt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "numgen_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "hash_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "map_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "queue_stmt_expr_simple"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "queue_stmt_flags"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "queue_stmt_flag"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COMMA"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "queue_stmt_flag"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "queue_stmt_flag"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "BYPASS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FANOUT"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_elem_expr_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_elem_expr_stmt_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "set_elem_options")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_elem_expr_stmt_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "concat_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_stmt_op"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_elem_expr_stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_ref_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_stmt_op"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_ref_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'{'")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_elem_expr_stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "stateful_stmt_list")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_stmt_op"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ADD")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "UPDATE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DELETE"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "map_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_stmt_op"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_ref_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'{'")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_elem_expr_stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "stateful_stmt_list")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COLON"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_elem_expr_stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "meter_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "flow_stmt_legacy_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (oneormore
                (element
                  (symbol
                    (SYM_REGEX "flow_stmt_opt")))
                (:Text "+")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'{'")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "meter_key_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'"))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "meter_stmt_alloc"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "flow_stmt_legacy_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLOW"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "flow_stmt_opt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TABLE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "meter_stmt_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "METER"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "SIZE"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "NUM"))))))))
                    (:Text ")")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'{'")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "meter_key_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "match_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "relational_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "variable_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'$'")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "symbol_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "variable_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "string"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_ref_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_ref_symbol_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "variable_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_ref_symbol_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "AT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_at"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "integer_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "primary_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "meta_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "xfrm_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "symbol_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "integer_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "payload_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "exthdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "exthdr_exists_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "socket_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rt_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ct_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "numgen_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "hash_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "fib_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "osf_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'('")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "basic_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "')'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "fib_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FIB"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "fib_flag"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "DOT"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "fib_flag"))))))))
                    (:Text ")")))
                (:Text "*")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "fib_result"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_fib"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "fib_result"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OIFNAME")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TYPE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_type")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OIF"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "fib_flag"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SADDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DADDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MARK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IIF")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OIF"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "osf_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OSF"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "osf_ttl"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "HDRVERSION")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "NAME"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_osf"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "osf_ttl"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "TTL"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "STRING"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "basic_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "primary_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "LSHIFT")))))))
                                    (OR "|")
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "RSHIFT"))))))))
                                  (:Text ")"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "primary_rhs_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "AMPERSAND"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "shift_rhs_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "CARET"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "and_rhs_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'|'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "exclusive_or_rhs_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "concat_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "basic_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "DOT"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "basic_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "prefix_rhs_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "basic_rhs_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SLASH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "range_rhs_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "basic_rhs_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DASH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "basic_rhs_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "multiton_rhs_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "prefix_rhs_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "range_rhs_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "map_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "concat_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MAP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rhs_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "concat_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "map_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'{'")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_list_member_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COMMA"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "set_list_member_expr")))))))
                                    (OR "|")
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "opt_newline"))))))))
                                  (:Text ")"))))))))
                    (:Text ")")))
                (:Text "*")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_list_member_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "opt_newline"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "set_expr")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "set_elem_expr"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (option
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "COLON"))))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "set_rhs_expr"))))))))
                                  (:Text ")")))
                              (:Text "?")))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "opt_newline"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "meter_key_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "meter_key_expr_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "set_elem_options")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "meter_key_expr_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "concat_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_elem_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_elem_expr_alloc"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (symbol
                    (SYM_REGEX "set_elem_expr_option")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_elem_key_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_lhs_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ASTERISK"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_elem_expr_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_elem_key_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (symbol
                    (SYM_REGEX "set_elem_stmt")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_elem_options"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (oneormore
                (element
                  (symbol
                    (SYM_REGEX "set_elem_option")))
                (:Text "+")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_elem_option"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TIMEOUT")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "EXPIRES"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "time_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "comment_spec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_elem_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COUNTER"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "PACKETS"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "NUM"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "BYTES"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "NUM"))))))))
                    (:Text ")")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_counter")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LIMIT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RATE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "limit_mode"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "limit_rate_pkts"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "limit_burst_pkts")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "limit_rate_bytes"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "limit_burst_bytes"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_limit")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COUNT"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "OVER")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ct"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_elem_expr_option"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TIMEOUT")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "EXPIRES"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "time_spec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "comment_spec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_lhs_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "concat_rhs_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "set_rhs_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "concat_rhs_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "verdict_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "initializer_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rhs_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "list_rhs_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'{'")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'"))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DASH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "counter_config"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PACKETS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "BYTES"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "counter_obj"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "quota_config"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "quota_mode"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "quota_unit"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "quota_used"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "quota_obj"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "secmark_config"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "string"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "secmark_obj"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_obj_type"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HELPER")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TIMEOUT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "EXPECTATION"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_cmd_type"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HELPERS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TIMEOUT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "EXPECTATION"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_l4protoname"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TCP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_tcp")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "UDP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_udp"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_helper_config"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TYPE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "QUOTED_STRING"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PROTOCOL"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ct_l4protoname"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_separator"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_type")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "L3PROTOCOL"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "family_spec_explicit"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_separator"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "timeout_state"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COLON"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_timeout_config"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "PROTOCOL"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_l4protoname")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "L3PROTOCOL"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "family_spec_explicit"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_separator")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "POLICY"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'='")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'{'")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "timeout_state"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COMMA"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "timeout_state"))))))))
                    (:Text ")")))
                (:Text "*")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'}'")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_separator"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_policy"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_expect_config"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "PROTOCOL"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_l4protoname")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (group
                                (:Text "(")
                                (expression
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "DPORT")))))))
                                  (OR "|")
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "SIZE"))))))))
                                (:Text ")"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "NUM")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TIMEOUT"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "time_spec")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "L3PROTOCOL"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "family_spec_explicit"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_separator"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_obj_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "limit_config"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RATE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "limit_mode"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "limit_rate_pkts"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "limit_burst_pkts")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "limit_rate_bytes"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "limit_burst_bytes"))))))))
                  (:Text ")"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "limit_obj"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "''")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "relational_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "relational_op")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (option
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (group
                                                (:Text "(")
                                                (expression
                                                  (sequence
                                                    (interleave
                                                      (difference
                                                        (term
                                                          (element
                                                            (symbol
                                                              (SYM_REGEX "basic_rhs_expr")))))))
                                                  (OR "|")
                                                  (sequence
                                                    (interleave
                                                      (difference
                                                        (term
                                                          (element
                                                            (symbol
                                                              (SYM_REGEX "list_rhs_expr"))))))))
                                                (:Text ")"))))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "SLASH"))))))))
                                  (:Text ")")))
                              (:Text "?")))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "list_rhs_expr")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "rhs_expr"))))))))
                  (:Text ")"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "list_rhs_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "basic_rhs_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (oneormore
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "COMMA"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "basic_rhs_expr"))))))))
                    (:Text ")")))
                (:Text "+")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rhs_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "concat_rhs_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "set_ref_symbol_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "shift_rhs_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "primary_rhs_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "LSHIFT")))))))
                                    (OR "|")
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "RSHIFT"))))))))
                                  (:Text ")"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "primary_rhs_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "and_rhs_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "shift_rhs_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "AMPERSAND"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "shift_rhs_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "exclusive_or_rhs_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "and_rhs_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "CARET"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "and_rhs_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "basic_rhs_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "exclusive_or_rhs_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (literal "'|'")))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "exclusive_or_rhs_expr"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "concat_rhs_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "basic_rhs_expr")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "multiton_rhs_expr"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (repetition
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "DOT"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "multiton_rhs_expr")))))))
                                    (OR "|")
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "basic_rhs_expr"))))))))
                                  (:Text ")"))))))))
                    (:Text ")")))
                (:Text "*")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "boolean_keys"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "EXISTS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MISSING"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "boolean_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "boolean_keys"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "keyword_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ORIGINAL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ETHER"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_eth")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LABEL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "REPLY")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RESET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_reset")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DNAT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_nat")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SNAT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_nat")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "VLAN"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_vlan")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ARP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_arp")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ECN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IP6"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ip6")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ip"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "primary_rhs_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "symbol_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "REDIRECT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_nat")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "UDPLITE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_udplite")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ICMP6"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_icmp")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ICMP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_icmp")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IGMP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COMP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_comp")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DCCP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_dccp")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SCTP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_sctp")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TCP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_tcp")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "UDP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_udp")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ESP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_esp")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "AH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ah")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (literal "'('")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "basic_rhs_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "')'"))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "integer_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "boolean_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "keyword_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "relational_op"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NEQ")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "GTE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LTE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NOT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "GT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "EQ"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "verdict_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ACCEPT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DROP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CONTINUE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "JUMP")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "GOTO"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "chain_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RETURN"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "chain_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "variable_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "identifier"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "meta_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "META"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "meta_key")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "STRING"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_meta")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "meta_key_unqualified"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "meta_key"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "meta_key_qualified")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "meta_key_unqualified"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "meta_key_qualified"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LENGTH")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PROTOCOL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PRIORITY")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RANDOM")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SECMARK"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_secmark"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "meta_key_unqualified"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MARK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IIFNAME")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IIFTYPE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OIFNAME")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OIFTYPE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SKUID")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SKGID")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NFTRACE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RTCLASSID")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IBRIPORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OBRIPORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IBRIDGENAME")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OBRIDGENAME")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PKTTYPE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CPU")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IIFGROUP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OIFGROUP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CGROUP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IPSEC"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ipsec")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TIME")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DAY")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HOUR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IIF")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OIF"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "meta_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "META"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "meta_key")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "STRING"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_meta")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "meta_key_unqualified"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NOTRACK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLOW"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "OFFLOAD")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ADD"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "AT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "string"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_at"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "socket_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SOCKET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "socket_key")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "CGROUPV2"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "LEVEL"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "NUM"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_socket"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "socket_key"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TRANSPARENT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MARK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "WILDCARD"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "offset_opt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "OFFSET"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "NUM"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "numgen_type"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "INC")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RANDOM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "numgen_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUMGEN"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "numgen_type"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MOD"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "offset_opt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_numgen"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "xfrm_spnum"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (option
                (element
                  (group
                    (:Text "(")
                    (expression
                      (sequence
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "SPNUM"))))))
                        (AND)
                        (interleave
                          (difference
                            (term
                              (element
                                (symbol
                                  (SYM_REGEX "NUM"))))))))
                    (:Text ")")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "xfrm_dir"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OUT"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "xfrm_state_key"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SPI")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "REQID"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "xfrm_state_proto_key"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DADDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SADDR"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "xfrm_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IPSEC"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "xfrm_dir"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "xfrm_spnum"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "xfrm_state_key")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "nf_key_proto"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "xfrm_state_proto_key"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ipsec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "hash_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "JHASH"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "expr"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "MOD"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (option
                              (element
                                (group
                                  (:Text "(")
                                  (expression
                                    (sequence
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "NUM"))))))
                                      (AND)
                                      (interleave
                                        (difference
                                          (term
                                            (element
                                              (symbol
                                                (SYM_REGEX "SEED"))))))))
                                  (:Text ")")))
                              (:Text "?"))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "SYMHASH"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "MOD"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "offset_opt"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_hash"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "nf_key_proto"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ip")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IP6"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ip6"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RT"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "nf_key_proto")))
                (:Text "?")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rt_key"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_rt"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rt_key"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CLASSID")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NEXTHOP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MTU")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IPSEC"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ipsec"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_key")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_dir"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (group
                                (:Text "(")
                                (expression
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "ct_key_dir")))))))
                                  (OR "|")
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "ct_key_proto_field"))))))))
                                (:Text ")"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ct"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_dir"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ORIGINAL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "REPLY"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_key"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "L3PROTOCOL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PROTOCOL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MARK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STATE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DIRECTION")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STATUS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "EXPIRATION")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HELPER")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SADDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DADDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PROTO_SRC")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PROTO_DST")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LABEL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "EVENT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SECMARK"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_secmark")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ID")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ct_key_dir_optional"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_key_dir"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SADDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DADDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "L3PROTOCOL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PROTOCOL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PROTO_SRC")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PROTO_DST")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ct_key_dir_optional"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_key_proto_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "SADDR")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "DADDR"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ip")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IP6"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "SADDR")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "DADDR"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ip6"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_key_dir_optional"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "BYTES")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PACKETS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "AVGPKT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ZONE"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "symbol_stmt_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "symbol_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "keyword_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ct_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_key")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "TIMEOUT")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "EXPECTATION")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_dir"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ct_key_dir_optional"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ct"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "payload_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "payload_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "stmt_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "payload_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "payload_raw_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "eth_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "vlan_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "arp_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ip_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "icmp_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "igmp_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ip6_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "icmp6_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "auth_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "esp_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "comp_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "udp_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "udplite_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "tcp_hdr_expr"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_tcp")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "dccp_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "sctp_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "th_hdr_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "payload_raw_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "AT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "payload_base_spec"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COMMA"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COMMA"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_at"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "payload_base_spec"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LL_HDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NETWORK_HDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TRANSPORT_HDR"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_th")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STRING"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "eth_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ETHER"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "eth_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_eth"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "eth_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SADDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DADDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TYPE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_type"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "vlan_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "VLAN"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "vlan_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_vlan"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "vlan_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ID")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CFI")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DEI")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PCP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TYPE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_type"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "arp_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ARP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "arp_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_arp"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "arp_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HTYPE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PTYPE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HLEN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PLEN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OPERATION")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "SADDR")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "DADDR"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ETHER"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "close_scope_eth")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "IP"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "close_scope_ip"))))))))
                  (:Text ")"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ip_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ip_hdr_field")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "OPTION"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "ip_option_type"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (option
                              (element
                                (symbol
                                  (SYM_REGEX "ip_option_field")))
                              (:Text "?")))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ip"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ip_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HDRVERSION")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HDRLENGTH")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DSCP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ECN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LENGTH")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ID")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FRAG_OFF")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TTL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PROTOCOL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHECKSUM")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SADDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DADDR"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ip_option_type"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LSRR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SSRR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RA"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ip_option_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TYPE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_type")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LENGTH")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "VALUE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PTR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ADDR"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "icmp_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ICMP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "icmp_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_icmp"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "icmp_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TYPE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_type")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CODE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHECKSUM")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ID")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SEQUENCE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "GATEWAY")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MTU"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "igmp_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IGMP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "igmp_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_igmp"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "igmp_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TYPE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_type")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHECKSUM")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MRT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "GROUP"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ip6_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "IP6"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ip6_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ip6"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "ip6_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HDRVERSION")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DSCP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ECN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLOWLABEL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LENGTH")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NEXTHDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HOPLIMIT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SADDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DADDR"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "icmp6_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ICMP6"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "icmp6_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_icmp"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "icmp6_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TYPE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_type")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CODE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHECKSUM")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PPTR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MTU")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ID")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SEQUENCE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MAXDELAY"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "auth_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "AH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "auth_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_ah"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "auth_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NEXTHDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HDRLENGTH")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RESERVED")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SPI")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SEQUENCE"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "esp_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ESP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "esp_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_esp"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "esp_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SPI")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SEQUENCE"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "comp_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COMP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "comp_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_comp"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "comp_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NEXTHDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLAGS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CPI"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "udp_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "UDP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "udp_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_udp"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "udp_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SPORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DPORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LENGTH")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHECKSUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "udplite_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "UDPLITE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "udplite_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_udplite"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "udplite_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SPORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DPORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CSUMCOV")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHECKSUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "tcp_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TCP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "tcp_hdr_field")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "OPTION"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (group
                                (:Text "(")
                                (expression
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "tcp_hdr_option_type")))))))
                                  (OR "|")
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "tcp_hdr_option_kind_and_field")))))))
                                  (OR "|")
                                  (sequence
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "AT"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "close_scope_at"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "tcp_hdr_option_type"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "COMMA"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "NUM"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "COMMA"))))))
                                    (AND)
                                    (interleave
                                      (difference
                                        (term
                                          (element
                                            (symbol
                                              (SYM_REGEX "NUM"))))))))
                                (:Text ")"))))))))
                  (:Text ")"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "optstrip_stmt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RESET"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TCP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "OPTION"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "tcp_hdr_option_type"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_tcp"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "tcp_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SPORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DPORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SEQUENCE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ACKSEQ")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DOFF")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RESERVED")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLAGS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "WINDOW")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHECKSUM")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "URGPTR"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "tcp_hdr_option_kind_and_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MSS"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "tcpopt_field_maxseg")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "tcp_hdr_option_sack"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "tcpopt_field_sack")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "WINDOW"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "tcpopt_field_window")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TIMESTAMP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "tcpopt_field_tsopt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "tcp_hdr_option_type"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LENGTH")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MPTCP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "tcpopt_field_mptcp"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "tcp_hdr_option_sack"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SACK0")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SACK1")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SACK2")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SACK3")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SACK"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "tcp_hdr_option_type"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SACK_PERM")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TIMESTAMP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FASTOPEN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "WINDOW")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MD5SIG")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MPTCP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ECHO")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MSS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NOP")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "EOL"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "tcpopt_field_sack"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LEFT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RIGHT"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "tcpopt_field_window"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COUNT"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "tcpopt_field_tsopt"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TSVAL")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TSECR"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "tcpopt_field_maxseg"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SIZE"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "tcpopt_field_mptcp"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SUBTYPE"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "dccp_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DCCP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "dccp_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_dccp"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "dccp_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SPORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DPORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TYPE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_type"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "sctp_chunk_type"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DATA")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SHUTDOWN_COMPLETE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HEARTBEAT_ACK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SHUTDOWN_ACK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COOKIE_ECHO")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FORWARD_TSN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "COOKIE_ACK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ASCONF_ACK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HEARTBEAT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SHUTDOWN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "INIT_ACK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ASCONF")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ABORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ERROR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SACK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CWR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ECNE")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "INIT"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "sctp_chunk_common_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TYPE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_type")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLAGS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LENGTH"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "sctp_chunk_data_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TSN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "STREAM")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SSN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "PPID"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "sctp_chunk_init_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "INIT_TAG")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "A_RWND")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM_OSTREAMS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM_ISTREAMS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "INIT_TSN"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "sctp_chunk_sack_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CUM_TSN_ACK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "A_RWND")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM_GACK_BLOCKS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM_DUP_TSNS"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "sctp_chunk_alloc"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FORWARD_TSN"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NEW_CUM_TSN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ASCONF_ACK"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SEQNO")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "INIT_ACK"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "sctp_chunk_init_field")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SHUTDOWN"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CUM_TSN_ACK")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ASCONF"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SEQNO")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DATA"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "sctp_chunk_data_field")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ECNE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LOWEST_TSN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "INIT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "sctp_chunk_init_field")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SACK"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "sctp_chunk_sack_field")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CWR"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LOWEST_TSN")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "sctp_chunk_type"))))))
        (AND)
        (interleave
          (difference
            (term
              (option
                (element
                  (symbol
                    (SYM_REGEX "sctp_chunk_common_field")))
                (:Text "?")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "sctp_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SCTP"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (group
                  (:Text "(")
                  (expression
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "sctp_hdr_field")))))))
                    (OR "|")
                    (sequence
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "CHUNK"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "sctp_chunk_alloc"))))))
                      (AND)
                      (interleave
                        (difference
                          (term
                            (element
                              (symbol
                                (SYM_REGEX "close_scope_sctp_chunk"))))))))
                  (:Text ")"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_sctp"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "sctp_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SPORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DPORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "VTAG")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHECKSUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "th_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TRANSPORT_HDR"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "th_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_th"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "th_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SPORT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DPORT"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "exthdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "hbh_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rt_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rt0_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rt2_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rt4_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "frag_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "dst_hdr_expr")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "mh_hdr_expr"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "hbh_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HBH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "hbh_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_hbh"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "hbh_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NEXTHDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HDRLENGTH"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rt_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rt_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_rt"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rt_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NEXTHDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HDRLENGTH")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TYPE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_type")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SEG_LEFT"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rt0_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RT0"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rt0_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_rt"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rt0_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ADDR"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'['")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "']'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rt2_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RT2"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rt2_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_rt"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rt2_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ADDR"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rt4_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RT4"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "rt4_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_rt"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "rt4_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "LAST_ENT")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FLAGS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TAG")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "SID"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "'['")))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NUM"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (literal "']'")))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "frag_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FRAG"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "frag_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_frag"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "frag_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MORE_FRAGMENTS")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RESERVED2")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RESERVED")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FRAG_OFF")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NEXTHDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "ID"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "dst_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DST"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "dst_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_dst"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "dst_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NEXTHDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HDRLENGTH"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "mh_hdr_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "mh_hdr_field"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_mh"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "mh_hdr_field"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "NEXTHDR")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HDRLENGTH")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "TYPE"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_type")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RESERVED")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "CHECKSUM"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "exthdr_exists_expr"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "EXTHDR"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "exthdr_key"))))))))
    (ENDL))
  (definition
    (symbol
      (SYM_REGEX "exthdr_key"))
    (DEF "=")
    (expression
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "HBH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_hbh")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "RT"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_rt")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "FRAG"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_frag")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "DST"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_dst")))))))
      (OR "|")
      (sequence
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "MH"))))))
        (AND)
        (interleave
          (difference
            (term
              (element
                (symbol
                  (SYM_REGEX "close_scope_mh"))))))))
    (ENDL)))
Node count:  754
not a head link
